<snippet>
	<content><![CDATA[
namespace combinatorics{
    const int nax = 3e5 + 5;
    int fact[nax], invfact[nax];
    
    int binpow(int a, int b){
        int res = 1;
        a %= MOD;
        while(b){
            if(b & 1) res = res * a % MOD;
            a = a * a % MOD;
            b >>= 1;
        }
        return res;
    }

    void setfactorials(int n){
        fact[0] = 1;
        rep(i, 1, n + 1){
            fact[i] = mod_mul(fact[i - 1], i, MOD);
        }
        invfact[0] = 1;
        rep(i, 1, n + 1){
            invfact[i] = binpow(fact[i], MOD - 2);
        }
    }

    int NCR(int n, int r){
        if(n < r) return 0;
        int res = mod_mul(fact[n], invfact[r], MOD);
        return mod_mul(res, invfact[n - r], MOD);
    }

    int NPR(int n, int r){
        if(n < r) return 0;
        return mod_mul(fact[n], invfact[n - r], MOD);
    }

}

using namespace combinatorics;
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	 <tabTrigger>pandc</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
